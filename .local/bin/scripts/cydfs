#!/bin/bash

# Configuration file
CONFIG_FILE="$HOME/.config/cydfs/config.yaml"
[ -f $CONFIG_FILE ] || { echo "[cydfs::init] ERROR: Config file not found ($CONFIG_FILE)." && exit 1 ;}

# Check 'yq' is installed
which yq 2>&1 > /dev/null
[ "$?" == "0" ] || { echo "[cydfs::init] ERROR: 'yq' is not installed." && exit 1 ;}

# Validate SSHFS mount options
SSHFS_OPTS=$( echo $(yq '.mount_opts[]' $CONFIG_FILE) | sed 's/" "/,/g;s/"//g' )
echo "[cydfs::init] DEBUG: sshfs mount options [$SSHFS_OPTS]"
[ "$SSHFS_OPTS" == "" ] || SSHFS_OPTS="-o $SSHFS_OPTS"

# Validate mount selection
[ "$1" == "" ] && { echo "[cydfs::init] ERROR: No mount specified." && exit 1 ;}
MOUNT_OBJ=$(yq ".mounts.$1" $CONFIG_FILE)
[ "$MOUNT_OBJ" == "null" ] && { echo "[cydfs::init] ERROR: No definition found for mount '$1'." && exit 1 ;}
echo -e "[cydfs::init] INFO: Found mount point:\n$MOUNT_OBJ"

# Extract data from config file
R_PATH=$(echo -e "$MOUNT_OBJ" | yq '.r_path' | sed 's/"//g') 		# Remote path
L_PATH=$(echo -e "$MOUNT_OBJ" | yq '.l_path' | sed 's/"//g') 		# Local path

SERVER_NAME=$(echo -e "$MOUNT_OBJ" | yq '.server' | sed 's/"//g') 	# Server name
SERVER=$(yq ".servers.$SERVER_NAME" $CONFIG_FILE) 			# Server object
echo -e "[cydfs::init] INFO: Found server:\n$SERVER"

HOST=$(echo -e "$SERVER" | yq '.host' | sed 's/"//g') 			# Host name (or IP). Always provided
USER=$(echo -e "$SERVER" | yq '.user' | sed 's/"//g') 			# User and port. Optional
[ "$USER" == "null" ] && USER="" || USER="$USER@"
PORT=$(echo -e "$SERVER" | yq '.port' | sed 's/"//g')
[ "$PORT" == "null" ] && PORT="" || PORT="-p $PORT"

# Build command
SSHFS_CMD=(sshfs $USER$HOST:$R_PATH $L_PATH -f -d $PORT $SSHFS_OPTS)

# Run SSHFS
echo "[cydfs::sshfs] INFO: Starting connection."
echo "[cydfs::sshfs] INFO:     ${SSHFS_CMD[@]}"
umount $HOME/$L_PATH
"${SSHFS_CMD[@]}" 2>&1

